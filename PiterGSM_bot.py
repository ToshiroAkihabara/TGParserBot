from aiogram import types, Router, F
from aiogram.filters import Command
from create_bot import dp, bot, admin
from markups import user_markups
from handlers import ipads, iphones, mac
from typing import TypeAlias
import logging
import asyncio

logger = logging.getLogger(__name__)
log_level = logging.INFO

MessageFromBot: TypeAlias = str


async def on_startup() -> MessageFromBot:
    logging.basicConfig(
        level=logging.INFO,
        format=u"%(filename)s:%(lineno)d #%(levelname)-8s [%(asctime)s] - %(name)s - %(message)s",
    )
    logger.info("Starting bot")

    await bot.set_my_commands(
        [
            types.BotCommand(command="/help", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
            types.BotCommand(command="/start", description="–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        ]
    )
    await bot.send_message(admin, "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ωüîã")


async def shutdown() -> MessageFromBot:
    await bot.send_message(admin, "–ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ωü™´")


async def main() -> None:
    try:

        router = Router()

        @router.message(F.text == "–ó–∞–ø—É—Å—Ç–∏—Ç—å")
        async def start(message: types.Message):
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Å–µ—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω —Å–∞–π—Ç–∞ https://pitergsm.ru/\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∫–∞—Ç–∞–ª–æ–≥:",
                reply_markup=user_markups.catalogs(),
            )
            await message.delete()

        @router.message(Command("start"))
        async def start(message: types.Message):
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Å–µ—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω —Å–∞–π—Ç–∞ https://pitergsm.ru/\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∫–∞—Ç–∞–ª–æ–≥:",
                reply_markup=user_markups.catalogs(),
            )

        @router.message(Command("help"))
        async def help(message: types.Message):
            await message.answer_sticker(
                "CAACAgIAAxkBAAEKC-lk3T7zeZwNYao4LRNikgdLI87O7AAClyAAAt88OUtsjjyKWQ5bXjAE"
            )
            await message.answer(
                "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞;\n/help - –ø–æ–º–æ—â—å."
            )

        @router.callback_query(F.data == "other")
        async def other(call: types.CallbackQuery):
            await bot.send_message(
                call.from_user.id,
                "–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º, –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º–∏.\n–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–ª—É–∂–∏—Ç –≤—Å–µ–≥–æ –ª–∏—à—å –ø—Ä–∏–º–µ—Ä–æ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —á–∞—Ç-–±–æ—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º.",
                reply_markup=user_markups.back(),
            )

        @router.message()
        async def empty(message: types.Message):
            await message.answer(
                '–ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help',
                reply_markup=user_markups.starts(),
            )

        dp.startup.register(on_startup)
        dp.shutdown.register(shutdown)

        dp.include_routers(iphones.router, ipads.router, mac.router, router)

        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, on_startup=on_startup)
        await dp.run_polling(bot, allowed_updates=dp.resolve_used_update_types())

    except Exception as ex:
        logger.error(ex)

    finally:
        await bot.session.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt as ex:
        logging.error(ex)
